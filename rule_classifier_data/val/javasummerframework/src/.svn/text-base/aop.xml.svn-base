<!DOCTYPE aspectwerkz PUBLIC
    "-//AspectWerkz//DTD//EN"
    "http://aspectwerkz.codehaus.org/dtd/aspectwerkz2.dtd">
    
<!--
 *
 * Copyright 2005 Tavant Technologies and Contributors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *
 * Original Author:  binil.thomas (Tavant Technologies)
 * Contributor(s):   -;
 *
-->

<aspectwerkz>
    <system id="my.app">
        <exclude package="net.sf.infared.*"/>

        <!--
            All public methods in com.my.app.layer1 package and its subpackages
            will be recorded as LayerOne
        -->
        <aspect class="net.sf.infrared.aspects.api.ApiAspect"
                deployment-model="perClass" name="LayerOne">
            <param name="layer" value="LayerOne"/>
            <pointcut name="methodExecution"
                      expression="execution(public * br.com.dyad.infrastructure.*...*(..))"/>
            <advice name="collectMetrics(StaticJoinPoint sjp)" type="around" bind-to="methodExecution"/>
        </aspect>

        <aspect class="net.sf.infrared.aspects.hibernate.Hibernate3Aspect"
            deployment-model="perJVM">

            <pointcut name="hib3Query(org.hibernate.Query query)"
                expression="execution(public java.util.List org.hibernate.Query+.list()) AND target(query)"/>

            <pointcut name="hib3Find(String queryString)"
                expression="execution(public * org.hibernate.Session+.find()) AND args(queryString, ..)"/>

            <advice name="aroundQueryExecution(org.hibernate.Query q, StaticJoinPoint sjp)"
                type="around" bind-to="hib3Query(q)"/>

            <advice name="aroundQueryExecution(String q, StaticJoinPoint sjp)"
                type="around" bind-to="hib3Find(q)"/>
        </aspect> ct>
    </system>
</aspectwerkz>